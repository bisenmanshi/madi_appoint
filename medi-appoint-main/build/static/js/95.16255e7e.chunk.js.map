{"version":3,"file":"static/js/95.16255e7e.chunk.js","mappings":"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","sources":["components/Empty.jsx","components/AdminApplications.jsx","components/AdminAppointments.jsx","components/AdminDoctors.jsx","components/Sidebar.jsx","components/Users.jsx","pages/Dashboard.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\n// to shoe when there is no data \r\nconst Empty = () => {\r\n  return <h2 className=\"nothing flex-center\">Nothing to show</h2>;\r\n};\r\n\r\n\r\nexport default Empty;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport Loading from \"./Loading\";\r\nimport { setLoading } from \"../redux/reducers/rootSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Empty from \"./Empty\";\r\nimport fetchData from \"../helper/apiCall\";\r\nimport \"../styles/user.css\";\r\n\r\n// set axios default base url\r\n// axios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\r\n\r\nconst AdminApplications = () => {\r\n\r\n  const [applications, setApplications] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.root);\r\n  \r\n  //get application of doctors \r\n  const getAllApp = async (e) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const temp = await fetchData(`/api/doctor/getnotdoctors`);\r\n      setApplications(temp);\r\n      dispatch(setLoading(false));\r\n    } catch (error) {}\r\n  };\r\n  // accpect tha application of doctor \r\n  const acceptUser = async (userId) => {\r\n    try {\r\n      const confirm = window.confirm(\"Are you sure you want to accept?\");\r\n      if (confirm) {\r\n        // change in data base\r\n        await toast.promise(\r\n          axios.put(\r\n            \"/api/doctor/acceptdoctor\",\r\n            { id: userId },\r\n            {\r\n              headers: {\r\n                authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n              },\r\n              data: { userId },\r\n            }\r\n          ),\r\n          {\r\n            success: \"Application accepted\",\r\n            error: \"Unable to accept application\",\r\n            loading: \"Accepting application...\",\r\n          }\r\n        );\r\n        getAllApp();\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n  // if admin reject application then delete from doctor schema  \r\n  const deleteUser = async (userId) => {\r\n    try {\r\n      const confirm = window.confirm(\"Are you sure you want to delete?\");\r\n      if (confirm) {\r\n        await toast.promise(\r\n          axios.put(\r\n            \"/api/doctor/rejectdoctor\",\r\n            { id: userId },\r\n            {\r\n              headers: {\r\n                authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n              },\r\n              data: { userId },\r\n            }\r\n          ),\r\n          {\r\n            success: \"Application rejected\",\r\n            error: \"Unable to reject application\",\r\n            loading: \"Rejecting application...\",\r\n          }\r\n        );\r\n        getAllApp();\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllApp();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <section className=\"user-section\">\r\n          <h3 className=\"home-sub-heading\">All Applications</h3>\r\n          {applications.length > 0 ? (\r\n            <div className=\"user-container\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>S.No</th>\r\n                    <th>Pic</th>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Email</th>\r\n                    <th>Mobile No.</th>\r\n                    <th>Experience</th>\r\n                    <th>Specialization</th>\r\n                    <th>Fees</th>\r\n                    <th>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {applications?.map((ele, i) => {\r\n                    return (\r\n                      <tr key={ele?._id}>\r\n                        <td>{i + 1}</td>\r\n                        <td>\r\n                          <img\r\n                            className=\"user-table-pic\"\r\n                            src={\r\n                              ele?.userId?.pic ||\r\n                              \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n                            }\r\n                            alt={ele?.userId?.firstname}\r\n                          />\r\n                        </td>\r\n                        <td>{ele?.userId?.firstname}</td>\r\n                        <td>{ele?.userId?.lastname}</td>\r\n                        <td>{ele?.userId?.email}</td>\r\n                        <td>{ele?.userId?.mobile}</td>\r\n                        <td>{ele?.experience}</td>\r\n                        <td>{ele?.specialization}</td>\r\n                        <td>{ele?.fees}</td>\r\n                        <td className=\"select\">\r\n                          <button\r\n                            className=\"btn user-btn accept-btn\"\r\n                            onClick={() => {\r\n                              acceptUser(ele?.userId?._id);\r\n                            }}\r\n                          >\r\n                            Accept\r\n                          </button>\r\n                          <button\r\n                            className=\"btn user-btn\"\r\n                            onClick={() => {\r\n                              deleteUser(ele?.userId?._id);\r\n                            }}\r\n                          >\r\n                            Reject\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <Empty />\r\n          )}\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminApplications;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport Loading from \"./Loading\";\r\nimport { setLoading } from \"../redux/reducers/rootSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Empty from \"./Empty\";\r\nimport fetchData from \"../helper/apiCall\";\r\nimport \"../styles/user.css\";\r\n\r\n// set base url\r\n// axios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\r\n\r\n// get all the appoinment detail \r\nconst AdminAppointments = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.root);\r\n\r\n  const getAllAppoint = async (e) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const temp = await fetchData(`/api/appointment/getallappointments`);\r\n      setAppointments(temp);\r\n      dispatch(setLoading(false));\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllAppoint();\r\n  }, []);\r\n  const complete = async (ele) => {\r\n    try {\r\n      await toast.promise(\r\n        axios.put(\r\n          \"/api/appointment/completed\",\r\n          {\r\n            appointid: ele?._id,\r\n            doctorId: ele?.doctorId._id,\r\n            doctorname: `${ele?.userId?.firstname} ${ele?.userId?.lastname}`,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        ),\r\n        {\r\n          success: \"Appointment booked successfully\",\r\n          error: \"Unable to book appointment\",\r\n          loading: \"Booking appointment...\",\r\n        }\r\n      );\r\n\r\n      getAllAppoint();\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <section className=\"user-section\">\r\n          <h3 className=\"home-sub-heading\">All Users</h3>\r\n          {appointments.length > 0 ? (\r\n            <div className=\"user-container\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>S.No</th>\r\n                    <th>Doctor</th>\r\n                    <th>Patient</th>\r\n                    <th>Appointment Date</th>\r\n                    <th>Appointment Time</th>\r\n                    <th>Booking Date</th>\r\n                    <th>Booking Time</th>\r\n                    <th>Status</th>\r\n\r\n                    {/* <th>Action</th> */}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {appointments?.map((ele, i) => {\r\n                    return (\r\n                      <tr key={ele?._id}>\r\n                        <td>{i + 1}</td>\r\n                        <td>\r\n                          {ele?.doctorId?.firstname +\r\n                            \" \" +\r\n                            ele?.doctorId?.lastname}\r\n                        </td>\r\n                        <td>\r\n                          {ele?.userId?.firstname + \" \" + ele?.userId?.lastname}\r\n                        </td>\r\n                        <td>{ele?.date}</td>\r\n                        <td>{ele?.time}</td>\r\n                        <td>{ele?.createdAt.split(\"T\")[0]}</td>\r\n                        <td>{ele?.updatedAt.split(\"T\")[1].split(\".\")[0]}</td>\r\n                        <td>{ele?.status}</td>\r\n                        {/* <td>\r\n                          <button\r\n                            className={`btn user-btn accept-btn ${\r\n                              ele?.status === \"Completed\" ? \"disable-btn\" : \"\"\r\n                            }`}\r\n                            disabled={ele?.status === \"Completed\"}\r\n                            onClick={() => complete(ele)}\r\n                          >\r\n                            Complete\r\n                          </button>\r\n                        </td> */}\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <Empty />\r\n          )}\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminAppointments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport Loading from \"./Loading\";\r\nimport { setLoading } from \"../redux/reducers/rootSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Empty from \"./Empty\";\r\nimport fetchData from \"../helper/apiCall\";\r\nimport \"../styles/user.css\";\r\n\r\n// axios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\r\n\r\n// give list of all doctors to admin \r\nconst AdminDoctors = () => {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.root);\r\n\r\n  const getAllDoctors = async (e) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const temp = await fetchData(`/api/doctor/getalldoctors`);\r\n      setDoctors(temp);\r\n      dispatch(setLoading(false));\r\n    } catch (error) {}\r\n  };\r\n\r\n  // delete any user \r\n\r\n  const deleteUser = async (userId) => {\r\n    try {\r\n      const confirm = window.confirm(\"Are you sure you want to delete?\");\r\n      if (confirm) {\r\n        await toast.promise(\r\n          axios.put(\r\n            \"/api/doctor/deletedoctor\",\r\n            { userId },\r\n            {\r\n              headers: {\r\n                authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n              },\r\n            }\r\n          ),\r\n          {\r\n            success: \"Doctor deleted successfully\",\r\n            error: \"Unable to delete Doctor\",\r\n            loading: \"Deleting Doctor...\",\r\n          }\r\n        );\r\n        getAllDoctors();\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllDoctors();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <section className=\"user-section\">\r\n          <h3 className=\"home-sub-heading\">All Doctors</h3>\r\n          {doctors.length > 0 ? (\r\n            <div className=\"user-container\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>S.No</th>\r\n                    <th>Pic</th>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Email</th>\r\n                    <th>Mobile No.</th>\r\n                    <th>Experience</th>\r\n                    <th>Specialization</th>\r\n                    <th>Fees</th>\r\n                    <th>Remove</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {doctors?.map((ele, i) => {\r\n                    return (\r\n                      <tr key={ele?._id}>\r\n                        <td>{i + 1}</td>\r\n                        <td>\r\n                          <img\r\n                            className=\"user-table-pic\"\r\n                            src={ele?.userId?.pic}\r\n                            alt={ele?.userId?.firstname}\r\n                          />\r\n                        </td>\r\n                        <td>{ele?.userId?.firstname}</td>\r\n                        <td>{ele?.userId?.lastname}</td>\r\n                        <td>{ele?.userId?.email}</td>\r\n                        <td>{ele?.userId?.mobile}</td>\r\n                        <td>{ele?.experience}</td>\r\n                        <td>{ele?.specialization}</td>\r\n                        <td>{ele?.fees}</td>\r\n                        <td className=\"select\">\r\n                          <button\r\n                            className=\"btn user-btn\"\r\n                            onClick={() => {\r\n                              deleteUser(ele?.userId?._id);\r\n                            }}\r\n                          >\r\n                            Remove\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <Empty />\r\n          )}\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDoctors;\r\n","import React from \"react\";\r\nimport {\r\n  FaHome,\r\n  FaList,\r\n  FaUser,\r\n  FaUserMd,\r\n  FaUsers,\r\n  FaEnvelope,\r\n} from \"react-icons/fa\";\r\nimport \"../styles/sidebar.css\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { MdLogout } from \"react-icons/md\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUserInfo } from \"../redux/reducers/rootSlice\";\r\n\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const sidebar = [\r\n    {\r\n      name: \"Home\",\r\n      path: \"/\",\r\n      icon: <FaHome />,\r\n    },\r\n    {\r\n      name: \"Users\",\r\n      path: \"/dashboard/users\",\r\n      icon: <FaUsers />,\r\n    },\r\n    {\r\n      name: \"Doctors\",\r\n      path: \"/dashboard/doctors\",\r\n      icon: <FaUserMd />,\r\n    },\r\n    {\r\n      name: \"Appointments\",\r\n      path: \"/dashboard/appointments\",\r\n      icon: <FaList />,\r\n    },\r\n    {\r\n      name: \"Applications\",\r\n      path: \"/dashboard/applications\",\r\n      icon: <FaEnvelope />,\r\n    },\r\n    {\r\n      name: \"Profile\",\r\n      path: \"/profile\",\r\n      icon: <FaUser />,\r\n    },\r\n  ];\r\n\r\n  const logoutFunc = () => {\r\n    dispatch(setUserInfo({}));\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"sidebar-section flex-center\">\r\n        <div className=\"sidebar-container\">\r\n          <ul>\r\n            {sidebar.map((ele, i) => {\r\n              return (\r\n                <li key={i}>\r\n                  {ele.icon}\r\n                  <NavLink to={ele.path}>{ele.name}</NavLink>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <div className=\"logout-container\">\r\n            <MdLogout />\r\n            <p onClick={logoutFunc}>Logout</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport Loading from \"./Loading\";\r\nimport { setLoading } from \"../redux/reducers/rootSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Empty from \"./Empty\";\r\nimport fetchData from \"../helper/apiCall\";\r\n\r\n// axios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\r\n\r\nconst Users = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.root);\r\n\r\n  const getAllUsers = async (e) => {\r\n    try {\r\n      dispatch(setLoading(true));\r\n      const temp = await fetchData(`/api/user/getallusers`);\r\n      setUsers(temp);\r\n      dispatch(setLoading(false));\r\n    } catch (error) {}\r\n  };\r\n\r\n  const deleteUser = async (userId) => {\r\n    try {\r\n      const confirm = window.confirm(\"Are you sure you want to delete?\");\r\n      if (confirm) {\r\n        await toast.promise(\r\n          axios.delete(\"/api/user/deleteuser\", {\r\n            headers: {\r\n              authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n            data: { userId },\r\n          }),\r\n          {\r\n            pending: \"Deleting in...\",\r\n            success: \"User deleted successfully\",\r\n            error: \"Unable to delete user\",\r\n            loading: \"Deleting user...\",\r\n          }\r\n        );\r\n        getAllUsers();\r\n      }\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <section className=\"user-section\">\r\n          <h3 className=\"home-sub-heading\">All Users</h3>\r\n          {users.length > 0 ? (\r\n            <div className=\"user-container\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>S.No</th>\r\n                    <th>Pic</th>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Email</th>\r\n                    <th>Mobile No.</th>\r\n                    <th>Age</th>\r\n                    <th>Gender</th>\r\n                    <th>Is Doctor</th>\r\n                    <th>Remove</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {users?.map((ele, i) => {\r\n                    return (\r\n                      <tr key={ele?._id}>\r\n                        <td>{i + 1}</td>\r\n                        <td>\r\n                          <img\r\n                            className=\"user-table-pic\"\r\n                            src={ele?.pic}\r\n                            alt={ele?.firstname}\r\n                          />\r\n                        </td>\r\n                        <td>{ele?.firstname}</td>\r\n                        <td>{ele?.lastname}</td>\r\n                        <td>{ele?.email}</td>\r\n                        <td>{ele?.mobile}</td>\r\n                        <td>{ele?.age}</td>\r\n                        <td>{ele?.gender}</td>\r\n                        <td>{ele?.isDoctor ? \"Yes\" : \"No\"}</td>\r\n                        <td className=\"select\">\r\n                          <button\r\n                            className=\"btn user-btn\"\r\n                            onClick={() => {\r\n                              deleteUser(ele?._id);\r\n                            }}\r\n                          >\r\n                            Remove\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <Empty />\r\n          )}\r\n        </section>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport AdminApplications from \"../components/AdminApplications\";\r\nimport AdminAppointments from \"../components/AdminAppointments\";\r\nimport AdminDoctors from \"../components/AdminDoctors\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Users from \"../components/Users\";\r\n\r\nconst Dashboard = (props) => {\r\n  const { type } = props;\r\n  return (\r\n    <>\r\n      <section className=\"layout-section\">\r\n        <div className=\"layout-container\">\r\n          <Sidebar />\r\n          {type === \"users\" ? (\r\n            <Users />\r\n          ) : type === \"doctors\" ? (\r\n            <AdminDoctors />\r\n          ) : type === \"applications\" ? (\r\n            <AdminApplications />\r\n          ) : type === \"appointments\" ? (\r\n            <AdminAppointments />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["className","useState","applications","setApplications","dispatch","useDispatch","loading","useSelector","state","root","getAllApp","e","setLoading","fetchData","temp","acceptUser","userId","window","confirm","toast","axios","id","headers","authorization","localStorage","getItem","data","success","error","deleteUser","useEffect","Loading","length","map","ele","i","src","pic","alt","firstname","lastname","email","mobile","experience","specialization","fees","onClick","_id","Empty","appointments","setAppointments","getAllAppoint","doctorId","date","time","createdAt","split","updatedAt","status","doctors","setDoctors","getAllDoctors","navigate","useNavigate","sidebar","name","path","icon","to","setUserInfo","removeItem","users","setUsers","getAllUsers","pending","age","gender","isDoctor","props","type"],"sourceRoot":""}