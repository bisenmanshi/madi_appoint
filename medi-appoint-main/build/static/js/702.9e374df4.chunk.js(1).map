{"version":3,"file":"static/js/702.9e374df4.chunk.js","mappings":"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","sources":["components/Footer.jsx","components/Navbar.jsx","pages/ApplyDoctor.jsx"],"sourcesContent":["import React,{useState} from \"react\";\r\nimport \"../styles/footer.css\";\r\n// icons \r\nimport { FaFacebookF, FaYoutube, FaInstagram } from \"react-icons/fa\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nconst Footer = () => {\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\r\n  const [user, setUser] = useState(\r\n    localStorage.getItem(\"token\")\r\n      ? jwt_decode(localStorage.getItem(\"token\"))\r\n      : \"\"\r\n  );\r\n  return (\r\n    <>\r\n      <footer>\r\n        <div className=\"footer\">\r\n          <div className=\"footer-links\">\r\n            <h3>Links</h3>\r\n            <ul>\r\n            <li>\r\n            <NavLink to={\"/\"}>Home</NavLink>\r\n          </li>\r\n          {token && !(user.isDoctor || user.isAdmin) &&(\r\n          <li>\r\n            <NavLink to={\"/doctors\"}>Doctors</NavLink>\r\n          </li>\r\n          )}\r\n          {token && user.isAdmin && (\r\n            <li>\r\n              <NavLink to={\"/dashboard/users\"}>Dashboard</NavLink>\r\n            </li>\r\n          )}\r\n          {token && !user.isAdmin && (\r\n            <>\r\n              <li>\r\n                <NavLink to={\"/appointments\"}>Appointments</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/notifications\"}>Notifications</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/applyfordoctor\"}>Apply for doctor</NavLink>\r\n              </li>\r\n              <li>\r\n                <HashLink to={\"/#contact\"}>Contact Us</HashLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/profile\"}>Profile</NavLink>\r\n              </li>\r\n              </>)}\r\n            </ul>\r\n          </div>\r\n          <div className=\"social\">\r\n            <h3>Social links</h3>\r\n            <ul>\r\n              <li className=\"facebook\">\r\n                <a\r\n                  href=\"https://www.facebook.com/\"\r\n                  target={\"_blank\"}\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <FaFacebookF />\r\n                </a>\r\n              </li>\r\n              <li className=\"youtube\">\r\n                <a\r\n                  href=\"https://www.youtube.com/\"\r\n                  target={\"_blank\"}\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <FaYoutube />\r\n                </a>\r\n              </li>\r\n              <li className=\"instagram\">\r\n                <a\r\n                  href=\"https://www.instagram.com/\"\r\n                  target={\"_blank\"}\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <FaInstagram />\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"footer-bottom\">\r\n          Made by Avish\r\n          Â© {new Date().getFullYear()}\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport \"../styles/navbar.css\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUserInfo } from \"../redux/reducers/rootSlice\";\r\n// for media query make navbar hidden \r\nimport { FiMenu } from \"react-icons/fi\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst Navbar = () => {\r\n  const [iconActive, setIconActive] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  // get the token \r\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || \"\");\r\n  // get user\r\n  const [user, setUser] = useState(\r\n    localStorage.getItem(\"token\")\r\n      ? jwt_decode(localStorage.getItem(\"token\"))\r\n      : \"\"\r\n  );\r\n\r\n  const logoutFunc = () => {\r\n    dispatch(setUserInfo({}));\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <nav className={iconActive ? \"nav-active\" : \"\"}>\r\n        <h2 className=\"nav-logo\">\r\n          <NavLink to={\"/\"}>Medi Appoint</NavLink>\r\n        </h2>\r\n        <ul className=\"nav-links\">\r\n          <li>\r\n            <NavLink to={\"/\"}>Home</NavLink>\r\n          </li>\r\n          {token && !(user.isDoctor || user.isAdmin) &&(\r\n          <li>\r\n            <NavLink to={\"/doctors\"}>Doctors</NavLink>\r\n          </li>\r\n          )}\r\n          {token && user.isAdmin && (\r\n            <li>\r\n              <NavLink to={\"/dashboard/users\"}>Dashboard</NavLink>\r\n            </li>\r\n          )}\r\n          {token && !user.isAdmin && (\r\n            <>\r\n              <li>\r\n                <NavLink to={\"/appointments\"}>Appointments</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/notifications\"}>Notifications</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/applyfordoctor\"}>Apply for doctor</NavLink>\r\n              </li>\r\n              <li>\r\n                <HashLink to={\"/#contact\"}>Contact Us</HashLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={\"/profile\"}>Profile</NavLink>\r\n              </li>\r\n            </>\r\n          )}\r\n          {!token ? (\r\n            <>\r\n              <li>\r\n                <NavLink\r\n                  className=\"btn\"\r\n                  to={\"/login\"}\r\n                >\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink\r\n                  className=\"btn\"\r\n                  to={\"/register\"}\r\n                >\r\n                  Register\r\n                </NavLink>\r\n              </li>\r\n            </>\r\n          ) : (\r\n            <li>\r\n              <span\r\n                className=\"btn\"\r\n                onClick={logoutFunc}\r\n              >\r\n                Logout\r\n              </span>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </nav>\r\n      <div className=\"menu-icons\">\r\n        {!iconActive && (\r\n          <FiMenu\r\n            className=\"menu-open\"\r\n            onClick={() => {\r\n              setIconActive(true);\r\n            }}\r\n          />\r\n        )}\r\n        {iconActive && (\r\n          <RxCross1\r\n            className=\"menu-close\"\r\n            onClick={() => {\r\n              setIconActive(false);\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/contact.css\";\r\nimport axios from \"axios\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\n\r\n// axios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\r\n\r\nconst ApplyDoctor = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [formDetails, setFormDetails] = useState({\r\n    specialization: \"\",\r\n    experience: \"\",\r\n    fees: \"\",\r\n    day: \"\",        // New state for day\r\n    startTime: \"\",  // New state for start time\r\n    endTime: \"\",    // New state for end time\r\n  });\r\n\r\n  const inputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    return setFormDetails({\r\n      ...formDetails,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const btnClick = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let daysPresent = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"];\r\n    let days = formDetails.day.toLowerCase().split(\" \");\r\n    let hasError = false;\r\n    days.forEach((value) => {\r\n      if (!daysPresent.includes(value)) {\r\n        hasError = true;\r\n      }\r\n    });\r\n    \r\n    if (hasError) {\r\n      return toast.error(\"Enter day in the specified format\");\r\n    }\r\n    \r\n    const start = formDetails.startTime;\r\n    const end = formDetails.endTime;\r\n    const startTime = new Date(`2000-01-01T${start}`);\r\n    const endTime = new Date(`2000-01-01T${end}`);\r\n    \r\n    if (startTime >= endTime) {\r\n      return toast.error(\"Please enter correct time\");\r\n    }\r\n    \r\n    try {\r\n      await toast.promise(\r\n        axios.post(\r\n          \"/api/doctor/applyfordoctor\",\r\n          {\r\n            formDetails,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        ),\r\n        {\r\n          success: \"Doctor application sent successfully\",\r\n          error: \"Unable to send Doctor application\",\r\n          loading: \"Sending doctor application...\",\r\n        }\r\n      );\r\n\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <section\r\n        className=\"register-section flex-center apply-doctor\"\r\n        id=\"contact\"\r\n      >\r\n        <div className=\"register-container flex-center contact\">\r\n          <h2 className=\"form-heading\">Apply for Doctor</h2>\r\n          <form className=\"register-form \">\r\n            <input\r\n              type=\"text\"\r\n              name=\"specialization\"\r\n              className=\"form-input\"\r\n              placeholder=\"Enter your specialization\"\r\n              value={formDetails.specialization}\r\n              onChange={inputChange}\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"experience\"\r\n              className=\"form-input\"\r\n              placeholder=\"Enter your experience (in years)\"\r\n              value={formDetails.experience}\r\n              onChange={inputChange}\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"fees\"\r\n              className=\"form-input\"\r\n              placeholder=\"Enter your fees (in Rupees)\"\r\n              value={formDetails.fees}\r\n              onChange={inputChange}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"day\"\r\n              className=\"form-input\"\r\n              placeholder=\"Enter day in Formate:monday tuesday\"\r\n              value={formDetails.day}\r\n              onChange={inputChange}\r\n              required\r\n            />\r\n            <label> start Time</label>\r\n            <input\r\n              type=\"time\"\r\n              name=\"startTime\"\r\n              className=\"form-input\"\r\n              required\r\n              value={formDetails.startTime}\r\n              onChange={inputChange}\r\n            />\r\n            <label> End Time</label>\r\n            <input\r\n              type=\"time\"\r\n              name=\"endTime\"\r\n              className=\"form-input\"\r\n              required\r\n              value={formDetails.endTime}\r\n              onChange={inputChange}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn form-btn\"\r\n              onClick={btnClick}\r\n            >\r\n              Apply\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApplyDoctor;\r\n"],"names":["useState","localStorage","getItem","token","jwt_decode","user","className","to","isDoctor","isAdmin","href","target","rel","Date","getFullYear","iconActive","setIconActive","dispatch","useDispatch","navigate","useNavigate","onClick","setUserInfo","removeItem","specialization","experience","fees","day","startTime","endTime","formDetails","setFormDetails","inputChange","e","name","value","btnClick","preventDefault","daysPresent","days","toLowerCase","split","hasError","forEach","includes","toast","start","end","axios","headers","Authorization","success","error","loading","id","type","placeholder","onChange","required"],"sourceRoot":""}